package org.barber.stdfhandler;

import org.barber.stdfhandler.file.*;
import org.junit.jupiter.api.Test;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.List;

class FullTest {

    @Test
    void createAndPrintFullFile() throws IOException {

        FileBuilder builder = FileHandler.newInstance().getBuilder()
                .addRecord(RecordAtr.newInstance()
                        .setModTim(TypeTimeTest.TEST_VALUE)
                        .setCmdLine(TypeCnTest.TEST_VALUE))
                .addRecord(RecordBps.newInstance().setSeqName(TypeCnTest.TEST_VALUE))
                .addRecord(RecordEps.newInstance())
                .addRecord(RecordFtr.newInstance()
                        .setTestNum(TypeU4Test.TEST_VALUE)
                        .setHeadNum(TypeU1Test.TEST_VALUE)
                        .setSiteNum(TypeU1Test.TEST_VALUE)
                        .setCyclCnt(TypeU4Test.TEST_VALUE)
                        .setRelVadr(TypeU4Test.TEST_VALUE)
                        .setReptCnt(TypeU4Test.TEST_VALUE)
                        .setNumFail(TypeU4Test.TEST_VALUE)
                        .setXfailAd(TypeI4Test.TEST_VALUE)
                        .setYfailAd(TypeI4Test.TEST_VALUE)
                        .setVectOff(TypeI2Test.TEST_VALUE)
                        .setRtnIndxAndStat(TypeArrayTest.U2_TEST_VALUE, TypeArrayTest.N1_TEST_VALUE)
                        .setPgmIndxAndStat(TypeArrayTest.U2_TEST_VALUE, TypeArrayTest.N1_TEST_VALUE)
                        .setFailPin(TypeDnTest.TEST_VALUE)
                        .setVectNam(TypeCnTest.TEST_VALUE)
                        .setTimeSet(TypeCnTest.TEST_VALUE)
                        .setOpCode(TypeCnTest.TEST_VALUE)
                        .setTestTxt(TypeCnTest.TEST_VALUE)
                        .setAlarmId(TypeCnTest.TEST_VALUE)
                        .setProgTxt(TypeCnTest.TEST_VALUE)
                        .setRsltTxt(TypeCnTest.TEST_VALUE)
                        .setPatgNum(TypeU1Test.TEST_VALUE)
                        .setSpinMap(TypeDnTest.TEST_VALUE))
                .addRecord(RecordHbr.newInstance()
                        .setHeadNum(TypeU1Test.TEST_VALUE)
                        .setSiteNum(TypeU1Test.TEST_VALUE)
                        .setHbinNum(TypeU2Test.TEST_VALUE)
                        .setHbinCnt(TypeU4Test.TEST_VALUE)
                        .setHbinPf(TypeC1Test.TEST_VALUE)
                        .setHbinNam(TypeCnTest.TEST_VALUE))
                .addRecord(RecordMir.newInstance()
                        .setSetupT(TypeTimeTest.TEST_VALUE)
                        .setStartT(TypeTimeTest.TEST_VALUE)
                        .setStatNum(TypeU1Test.TEST_VALUE)
                        .setModeCod(TypeC1Test.TEST_VALUE)
                        .setRtstCod(TypeC1Test.TEST_VALUE)
                        .setProtCod(TypeC1Test.TEST_VALUE)
                        .setBurnTim(TypeU2Test.TEST_VALUE)
                        .setCmodCod(TypeC1Test.TEST_VALUE)
                        .setLotId(TypeCnTest.TEST_VALUE)
                        .setPartTyp(TypeCnTest.TEST_VALUE)
                        .setNodeNam(TypeCnTest.TEST_VALUE)
                        .setTstrTyp(TypeCnTest.TEST_VALUE)
                        .setJobNam(TypeCnTest.TEST_VALUE)
                        .setJobRev(TypeCnTest.TEST_VALUE)
                        .setSblotId(TypeCnTest.TEST_VALUE)
                        .setOperNam(TypeCnTest.TEST_VALUE)
                        .setExecTyp(TypeCnTest.TEST_VALUE)
                        .setExecVer(TypeCnTest.TEST_VALUE)
                        .setTestCod(TypeCnTest.TEST_VALUE)
                        .setTstTemp(TypeCnTest.TEST_VALUE)
                        .setUserTxt(TypeCnTest.TEST_VALUE)
                        .setAuxFile(TypeCnTest.TEST_VALUE)
                        .setPkgTyp(TypeCnTest.TEST_VALUE)
                        .setFamlyId(TypeCnTest.TEST_VALUE)
                        .setDateCod(TypeCnTest.TEST_VALUE)
                        .setFacilId(TypeCnTest.TEST_VALUE)
                        .setFloorId(TypeCnTest.TEST_VALUE)
                        .setProcId(TypeCnTest.TEST_VALUE)
                        .setOperFrq(TypeCnTest.TEST_VALUE)
                        .setSpecNam(TypeCnTest.TEST_VALUE)
                        .setSpecVer(TypeCnTest.TEST_VALUE)
                        .setFlowId(TypeCnTest.TEST_VALUE)
                        .setSetupId(TypeCnTest.TEST_VALUE)
                        .setDsgnRev(TypeCnTest.TEST_VALUE)
                        .setEngId(TypeCnTest.TEST_VALUE)
                        .setRomCod(TypeCnTest.TEST_VALUE)
                        .setSerlNum(TypeCnTest.TEST_VALUE)
                        .setSuprNam(TypeCnTest.TEST_VALUE))
                .addRecord(RecordMpr.newInstance()
                        .setTestNum(TypeU4Test.TEST_VALUE)
                        .setHeadNum(TypeU1Test.TEST_VALUE)
                        .setSiteNum(TypeU1Test.TEST_VALUE)
                        .setRtnStat(TypeArrayTest.N1_TEST_VALUE)
                        .setRtnRslt(TypeArrayTest.R4_TEST_VALUE)
                        .setTestTxt(TypeCnTest.TEST_VALUE)
                        .setAlarmId(TypeCnTest.TEST_VALUE)
                        .setResScal(TypeI1Test.TEST_VALUE)
                        .setLlmScalAndLoLimit(TypeI1Test.TEST_VALUE, TypeR4Test.TEST_VALUE)
                        .setHlmScalAndHiLimit(TypeI1Test.TEST_VALUE, TypeR4Test.TEST_VALUE)
                        .setStartInAndIncrIn(TypeR4Test.TEST_VALUE, TypeR4Test.TEST_VALUE)
                        .setRtnIndx(TypeArrayTest.U2_TEST_VALUE)
                        .setUnits(TypeCnTest.TEST_VALUE)
                        .setUnitsIn(TypeCnTest.TEST_VALUE)
                        .setcResmft(TypeCnTest.TEST_VALUE)
                        .setcLlmfmt(TypeCnTest.TEST_VALUE)
                        .setcHlmfmt(TypeCnTest.TEST_VALUE)
                        .setLoSpec(TypeR4Test.TEST_VALUE)
                        .setHiSpec(TypeR4Test.TEST_VALUE))
                .addRecord(RecordMrr.newInstance()
                        .setFinishT(TypeTimeTest.TEST_VALUE)
                        .setDispCod(TypeC1Test.TEST_VALUE)
                        .setUsrDesc(TypeCnTest.TEST_VALUE)
                        .setExcDesc(TypeCnTest.TEST_VALUE))
                .addRecord(RecordPcr.newInstance()
                        .setHeadNum(TypeU1Test.TEST_VALUE)
                        .setSiteNum(TypeU1Test.TEST_VALUE)
                        .setPartCnt(TypeU4Test.TEST_VALUE)
                        .setRtstCnt(TypeU4Test.TEST_VALUE)
                        .setAbrtCnt(TypeU4Test.TEST_VALUE)
                        .setGoodCnt(TypeU4Test.TEST_VALUE)
                        .setFuncCnt(TypeU4Test.TEST_VALUE))
                .addRecord(RecordPgr.newInstance()
                        .setGrpIndx(TypeU2Test.TEST_VALUE)
                        .setGrpNam(TypeCnTest.TEST_VALUE)
                        .setPmrIndx(TypeArrayTest.U2_TEST_VALUE))
                .addRecord(RecordPir.newInstance()
                        .setHeadNum(TypeU1Test.TEST_VALUE)
                        .setSiteNum(TypeU1Test.TEST_VALUE))
                .addRecord(RecordPlr.newInstance().setValues(TypeArrayTest.U2_TEST_VALUE, TypeArrayTest.U2_TEST_VALUE,
                        TypeArrayTest.U1_TEST_VALUE, TypeArrayTest.CN_TEST_VALUE, TypeArrayTest.CN_TEST_VALUE,
                        TypeArrayTest.CN_TEST_VALUE, TypeArrayTest.CN_TEST_VALUE))
                .addRecord(RecordPmr.newInstance()
                        .setPmrIndx(TypeU2Test.TEST_VALUE)
                        .setChanTyp(TypeU2Test.TEST_VALUE)
                        .setChanNam(TypeCnTest.TEST_VALUE)
                        .setPhyNam(TypeCnTest.TEST_VALUE)
                        .setLogNam(TypeCnTest.TEST_VALUE)
                        .setHeadNum(TypeU1Test.TEST_VALUE)
                        .setSiteNum(TypeU1Test.TEST_VALUE))
                .addRecord(RecordPrr.newInstance()
                        .setHeadNum(TypeU1Test.TEST_VALUE)
                        .setSiteNum(TypeU1Test.TEST_VALUE)
                        .setNumTest(TypeU2Test.TEST_VALUE)
                        .setHardBin(TypeU2Test.TEST_VALUE)
                        .setSoftBin(TypeU2Test.TEST_VALUE)
                        .setXCoord(TypeI2Test.TEST_VALUE)
                        .setYCoord(TypeI2Test.TEST_VALUE)
                        .setTestT(TypeU4Test.TEST_VALUE)
                        .setPartId(TypeCnTest.TEST_VALUE)
                        .setPartTxt(TypeCnTest.TEST_VALUE)
                        .setPartFix(TypeBnTest.TEST_VALUE));
//                .addRecord(RecordVur.newInstance()
//                        .setUpdNam(TYPE_CN_EXPECTED_VALUE))

//                .addRecord(RecordRdr.newInstance()
//                        .setRtstBin(List.of(TYPE_U2_EXPECTED_VALUE, TYPE_U2_EXPECTED_VALUE)))
//                .addRecord(RecordSdr.newInstance()
//                        .setHeadNum(TYPE_U1_EXPECTED_VALUE)
//                        .setSiteGrp(TYPE_U1_EXPECTED_VALUE)
//                        .setSiteNum(List.of(TYPE_U1_EXPECTED_VALUE, TYPE_U1_EXPECTED_VALUE))
//                        .setHandTyp(TYPE_CN_EXPECTED_VALUE)
//                        .setHandId(TYPE_CN_EXPECTED_VALUE)
//                        .setCardTyp(TYPE_CN_EXPECTED_VALUE)
//                        .setCardId(TYPE_CN_EXPECTED_VALUE)
//                        .setLoadTyp(TYPE_CN_EXPECTED_VALUE)
//                        .setLoadId(TYPE_CN_EXPECTED_VALUE)
//                        .setDibTyp(TYPE_CN_EXPECTED_VALUE)
//                        .setDibId(TYPE_CN_EXPECTED_VALUE)
//                        .setCablTyp(TYPE_CN_EXPECTED_VALUE)
//                        .setCablId(TYPE_CN_EXPECTED_VALUE)
//                        .setContTyp(TYPE_CN_EXPECTED_VALUE)
//                        .setContId(TYPE_CN_EXPECTED_VALUE)
//                        .setLasrTyp(TYPE_CN_EXPECTED_VALUE)
//                        .setLasrId(TYPE_CN_EXPECTED_VALUE)
//                        .setExtrTyp(TYPE_CN_EXPECTED_VALUE)
//                        .setExtrId(TYPE_CN_EXPECTED_VALUE))
//                .addRecord(RecordSbr.newInstance()
//                        .setHeadNum(TYPE_U1_EXPECTED_VALUE)
//                        .setSiteNum(TYPE_U1_EXPECTED_VALUE)
//                        .setSbinNum(TYPE_U2_EXPECTED_VALUE)
//                        .setSbinCnt(TYPE_U4_EXPECTED_VALUE)
//                        .setSbinPf(TYPE_C1_EXPECTED_VALUE)
//                        .setSbinNam(TYPE_CN_EXPECTED_VALUE))
//                .addWafer(WaferData.newInstance()
//                        .setWir(RecordWir.newInstance()
//                                .setHeadNum(TYPE_U1_EXPECTED_VALUE)
//                                .setSiteGrp(TYPE_U1_EXPECTED_VALUE)
//                                .setStartT(TYPE_TIME_EXPECTED_VALUE)
//                                .setWaferId(TYPE_CN_EXPECTED_VALUE))
//                        .setWcr(RecordWcr.newInstance()
//                                .setWafrSiz(TYPE_R4_EXPECTED_VALUE)
//                                .setDieHt(TYPE_R4_EXPECTED_VALUE)
//                                .setDieWid(TYPE_R4_EXPECTED_VALUE)
//                                .setWfUnits(TYPE_U1_EXPECTED_VALUE)
//                                .setWfFlat(TYPE_C1_EXPECTED_VALUE)
//                                .setCenterX(TYPE_I2_EXPECTED_VALUE)
//                                .setCenterY(TYPE_I2_EXPECTED_VALUE)
//                                .setPosX(TYPE_C1_EXPECTED_VALUE)
//                                .setPosY(TYPE_C1_EXPECTED_VALUE))
//                        .setWrr(RecordWrr.newInstance()
//                                .setHeadNum(TYPE_U1_EXPECTED_VALUE)
//                                .setSiteGrp(TYPE_U1_EXPECTED_VALUE)
//                                .setFinishT(TYPE_TIME_EXPECTED_VALUE)
//                                .setPartCnt(TYPE_U4_EXPECTED_VALUE)
//                                .setRtstCnt(TYPE_U4_EXPECTED_VALUE)
//                                .setAbrtCnt(TYPE_U4_EXPECTED_VALUE)
//                                .setGoodCnt(TYPE_U4_EXPECTED_VALUE)
//                                .setFuncCnt(TYPE_U4_EXPECTED_VALUE)
//                                .setWaferId(TYPE_CN_EXPECTED_VALUE)
//                                .setFabwfId(TYPE_CN_EXPECTED_VALUE)
//                                .setFrameId(TYPE_CN_EXPECTED_VALUE)
//                                .setMaskId(TYPE_CN_EXPECTED_VALUE)
//                                .setUsrDesc(TYPE_CN_EXPECTED_VALUE)
//                                .setExcDesc(TYPE_CN_EXPECTED_VALUE))
//                        .addPart(PartData.newInstance()
//                                .addPtr(RecordPtr.newInstance()
//                                        .setTestNum(TYPE_U4_EXPECTED_VALUE)
//                                        .setHeadNum(TYPE_U1_EXPECTED_VALUE)
//                                        .setSiteNum(TYPE_U1_EXPECTED_VALUE)
//                                        .setTestFlg(TYPE_B1_DEFAULT_VALUE)
//                                        .setParmFlg(TYPE_B1_DEFAULT_VALUE)
//                                        .setResult(TYPE_R4_EXPECTED_VALUE)
//                                        .setTestTxt(TYPE_CN_EXPECTED_VALUE)
//                                        .setAlarmId(TYPE_CN_EXPECTED_VALUE)
//                                        .setOptFlag(TYPE_B1_DEFAULT_VALUE)
//                                        .setResScal(TYPE_I1_EXPECTED_VALUE)
//                                        .setLlmScal(TYPE_I1_EXPECTED_VALUE)
//                                        .setHlmScal(TYPE_I1_EXPECTED_VALUE)
//                                        .setLoLimit(TYPE_R4_EXPECTED_VALUE)
//                                        .setHiLimit(TYPE_R4_EXPECTED_VALUE)
//                                        .setUnits(TYPE_CN_EXPECTED_VALUE)
//                                        .setcResfmt(TYPE_CN_EXPECTED_VALUE)
//                                        .setcLlmft(TYPE_CN_EXPECTED_VALUE)
//                                        .setcHlmft(TYPE_CN_EXPECTED_VALUE)
//                                        .setLoSpec(TYPE_R4_EXPECTED_VALUE)
//                                        .setHiSpec(TYPE_R4_EXPECTED_VALUE))
//                .addRecord(RecordTsr.newInstance()
//                        .setHeadNum(TYPE_U1_EXPECTED_VALUE)
//                        .setSiteNum(TYPE_U1_EXPECTED_VALUE)
//                        .setTestTyp(TYPE_C1_EXPECTED_VALUE)
//                        .setTestNum(TYPE_U4_EXPECTED_VALUE)
//                        .setExecCnt(TYPE_U4_EXPECTED_VALUE)
//                        .setFailCnt(TYPE_U4_EXPECTED_VALUE)
//                        .setAlrmCnt(TYPE_U4_EXPECTED_VALUE)
//                        .setTestNam(TYPE_CN_EXPECTED_VALUE)
//                        .setSeqName(TYPE_CN_EXPECTED_VALUE)
//                        .setTestLbl(TYPE_CN_EXPECTED_VALUE)
//                        .setOptFlag(TYPE_B1_DEFAULT_VALUE)
//                        .setTestTim(TYPE_R4_EXPECTED_VALUE)
//                        .setTestMin(TYPE_R4_EXPECTED_VALUE)
//                        .setTestMax(TYPE_R4_EXPECTED_VALUE)
//                        .setTstSums(TYPE_R4_EXPECTED_VALUE)
//                        .setTstSqrc(TYPE_R4_EXPECTED_VALUE))


        ByteArrayOutputStream outputStream = builder.toStream();
        FileHandler fileHandler = FileHandler.newInstance();
        List<Record> records = fileHandler.readAsRecordList(new ByteArrayInputStream(outputStream.toByteArray()));
        records.forEach(System.out::println);

    }
}
